#!/usr/bin/env python3
"""
Setup script to configure Claude Anthropic API environment variables
"""

import os
import sys
from pathlib import Path

def setup_claude_environment():
    """Setup Claude Anthropic API environment variables"""
    
    print("🚀 Setting up Claude Anthropic API Environment")
    print("=" * 50)
    
    # Check if .env file exists
    env_file = Path(".env")
    
    # Get API key from user
    api_key = input("\n📝 Enter your Anthropic API key: ").strip()
    
    if not api_key:
        print("❌ API key is required!")
        sys.exit(1)
    
    # Prepare environment variables
    env_vars = [
        f"ANTHROPIC_API_KEY={api_key}",
        "# Claude Anthropic API Configuration",
        "# Generated by setup_claude_env.py",
        ""
    ]
    
    # Write to .env file
    try:
        with open(env_file, "w") as f:
            f.write("\n".join(env_vars))
        
        print(f"✅ Environment variables written to {env_file}")
        
        # Also set in current environment for immediate use
        os.environ["ANTHROPIC_API_KEY"] = api_key
        
        print("✅ Environment variables set for current session")
        
    except Exception as e:
        print(f"❌ Error writing .env file: {e}")
        sys.exit(1)
    
    # Test the connection
    print("\n🧪 Testing Claude API connection...")
    
    try:
        from claude_anthropic_client import ClaudeAnthropicClient
        
        client = ClaudeAnthropicClient()
        response = client.send_message("Hello! Please respond with 'Connection successful!'", max_tokens=50)
        
        print("✅ Claude API connection successful!")
        print(f"Response: {response['content'][0]['text']}")
        
    except Exception as e:
        print(f"❌ Error testing connection: {e}")
        print("\nPlease check your API key and try again.")
        sys.exit(1)
    
    print("\n🎉 Setup complete!")
    print("\nNext steps:")
    print("1. Your .env file has been created with your API key")
    print("2. You can now run any of the trading scripts")
    print("3. The system will use Claude instead of GLM 4.5")
    
    print("\nExample usage:")
    print("python test_enhanced_strategy_architect.py")
    print("python demo_enhanced_strategy_architect.py")

def check_current_setup():
    """Check current environment setup"""
    
    print("🔍 Checking current environment setup...")
    
    # Check for API key
    api_key = os.getenv("ANTHROPIC_API_KEY")
    if api_key:
        print(f"✅ ANTHROPIC_API_KEY is set (starts with: {api_key[:10]}...)")
    else:
        print("❌ ANTHROPIC_API_KEY is not set")
    
    # Check for .env file
    env_file = Path(".env")
    if env_file.exists():
        print(f"✅ .env file exists at {env_file}")
    else:
        print("❌ .env file not found")
    
    # Check if old GLM variables are still set
    old_vars = ["GLM_URL", "GLM_API_TOKEN", "CLAUDE_API_KEY"]
    for var in old_vars:
        value = os.getenv(var)
        if value:
            print(f"⚠️  Old variable {var} is still set")

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "check":
        check_current_setup()
    else:
        setup_claude_environment()
